{"version":3,"sources":["keyb.png","App.js","reportWebVitals.js","index.js"],"names":["ListItem","id","emoji","isCurrent","handleChange","onClick","data-id","className","App","audioContext","AudioContext","defaultInstruments","defaultInstrumentsEmoji","React","useState","currentInstrument","setCurrentInstrument","currentInstrumentEmoji","setCurrentInstrumentEmoji","player","setPlayer","transition","useTransition","from","opacity","enter","leave","config","duration","handleInstrumentChange","event","currentTarget","dataset","keydownCallBack","repeat","keyCode","play","keyupCallBack","stop","useEffect","document","addEventListener","removeEventListener","Soundfont","instrument","then","map","item","props","key","div","style","src","keyboardImg","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54c952e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/keyb.26965698.png\";","import Soundfont from 'soundfont-player'\nimport React from 'react'\nimport keyboardImg from './keyb.png'\nimport { useTransition, animated } from 'react-spring'\n\nfunction App() {\n  const audioContext = new AudioContext();\n  const defaultInstruments = ['acoustic_grand_piano', 'electric_guitar_clean', 'trumpet', 'violin']\n  const defaultInstrumentsEmoji = ['ðŸŽ¹', 'ðŸŽ¸', 'ðŸŽº', 'ðŸŽ»']\n  const [currentInstrument, setCurrentInstrument] = React.useState(defaultInstruments[0])\n  const [currentInstrumentEmoji, setCurrentInstrumentEmoji] = React.useState(defaultInstrumentsEmoji[0])\n  const [player, setPlayer] = React.useState(null)\n\n  const transition = useTransition(currentInstrumentEmoji, null, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n    config: { duration: 150 },\n  })\n\n  const handleInstrumentChange = (event) => {\n    const id = event.currentTarget.dataset.id\n    setCurrentInstrument(defaultInstruments[id])\n    setCurrentInstrumentEmoji(defaultInstrumentsEmoji[id])\n  }\n\n  const isCurrent = (id) => (defaultInstruments[id] === currentInstrument)\n\n  const keydownCallBack = (event) => {\n    if (player && !event.repeat) {\n      if (event.keyCode === 67) {\n        player.play('C3')\n      }\n      else if (event.keyCode === 70) {\n        player.play('C#3')\n      }\n      else if (event.keyCode === 86) {\n        player.play('D3')\n      } else if (event.keyCode === 71) {\n        player.play('D#3')\n      } else if (event.keyCode === 66) {\n        player.play('E3')\n      } else if (event.keyCode === 78) {\n        player.play('F3')\n      } else if (event.keyCode === 74) {\n        player.play('F#3')\n      } else if (event.keyCode === 77) {\n        player.play('G3')\n      } else if (event.keyCode === 75) {\n        player.play('G#3')\n      } else if (event.keyCode === 188) {\n        player.play('A3')\n      } else if (event.keyCode === 76) {\n        player.play('A#3')\n      } else if (event.keyCode === 190) {\n        player.play('B3')\n      } else if (event.keyCode === 191) {\n        player.play('C4')\n      }\n    }\n  }\n\n  const keyupCallBack = (event) => {\n    if (player) {\n      player.stop()\n    }\n  }\n\n  React.useEffect(() => {\n    document.addEventListener('keydown', keydownCallBack, false)\n    document.addEventListener('keyup', keyupCallBack, false)\n\n    return () => {\n      document.removeEventListener('keydown', keydownCallBack)\n      document.removeEventListener('keyup', keyupCallBack)\n    }\n  }, [player])\n\n  React.useEffect(() => {\n    Soundfont.instrument(audioContext, currentInstrument).then(player => setPlayer(player))\n\n  }, [currentInstrument])\n\n  return (\n    <div className=\"pt-10 flex flex-col items-center justify-items-center\">\n      <h1 className='p-4 font-light font-serif text-4xl'>Browser Instrument</h1>\n      <span className='relative h-48 w-24'>\n        {transition.map(({ item, props, key }) =>\n          <animated.div key={key} style={props} className='absolute mx-auto pt-8 text-8xl'>{item}</animated.div>\n        )}\n      </span>\n      {/* {currentInstrumentEmoji} */}\n      {/* <h1 className='p-4 text-8xl'>{currentInstrumentEmoji}</h1> */}\n      <ul className='w-96 flex text-4xl flex-row justify-between'>\n        <ListItem id={0} emoji={defaultInstrumentsEmoji[0]} isCurrent={isCurrent(0)} handleChange={handleInstrumentChange} />\n        <ListItem id={1} emoji={defaultInstrumentsEmoji[1]} isCurrent={isCurrent(1)} handleChange={handleInstrumentChange} />\n        <ListItem id={2} emoji={defaultInstrumentsEmoji[2]} isCurrent={isCurrent(2)} handleChange={handleInstrumentChange} />\n        <ListItem id={3} emoji={defaultInstrumentsEmoji[3]} isCurrent={isCurrent(3)} handleChange={handleInstrumentChange} />\n\n      </ul>\n      <p className='py-8 text-gray-500 font-semibold'>Use your keyboard to play ['C' for C3] throuh ['/' for C4]</p>\n      <img className='md:max-w-2xl max-w-full' src={keyboardImg} alt=\"keyboard\" />\n    </div>\n  );\n}\n\nconst ListItem = ({ id, emoji, isCurrent, handleChange }) => (<li onClick={handleChange} data-id={id} className={`cursor-pointer p-4 rounded-lg hover:shadow transition duration-100 ease-in-out bg-white ${isCurrent && 'bg-gray-100'}`}>{emoji}</li>)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}